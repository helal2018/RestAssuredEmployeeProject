<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="34" passed="30">
  <reporter-output>
  </reporter-output>
  <suite name="EmployeesRestAPISuite" duration-ms="31254" started-at="2019-06-01T18:54:50Z" finished-at="2019-06-01T18:55:21Z">
    <groups>
    </groups>
    <test name="POM Model Test Cases" duration-ms="31254" started-at="2019-06-01T18:54:50Z" finished-at="2019-06-01T18:55:21Z">
      <class name="com.employeeapi.testCases.TC003_Post_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="setUp" is-config="true" duration-ms="7" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getEmployee()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="getEmployee" is-config="true" duration-ms="3406" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployee -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="checkContentEncoding" duration-ms="0" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="checkContentType" duration-ms="4" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="checkResponseBody" duration-ms="0" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="checkServerType" duration-ms="4" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="checkStatusCode" duration-ms="11" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="checkStatusLine" duration-ms="7" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@13deb50e]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC003_Post_Employee_Record -->
      <class name="com.employeeapi.testCases.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="setUp" is-config="true" duration-ms="269" started-at="2019-06-01T18:54:51Z" finished-at="2019-06-01T18:54:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="getAllEmployees" is-config="true" duration-ms="12103" started-at="2019-06-01T18:54:52Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkContentEncoding" duration-ms="24" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkContentLength" duration-ms="10" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkContentType" duration-ms="8" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkCookies" duration-ms="3" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkResponseBody" duration-ms="160" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkResponseTime" duration-ms="24" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkServerType" duration-ms="5" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkStatusCode" duration-ms="14" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="checkStatusLine" duration-ms="6" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@464bee09]" name="tearDown" is-config="true" duration-ms="3" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC001_Get_All_Employees -->
      <class name="com.employeeapi.testCases.TC005_Delete_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="setUp" is-config="true" duration-ms="8" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="updateEmployee()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="updateEmployee" is-config="true" duration-ms="6686" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployee -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="checkContentEncoding" duration-ms="4" started-at="2019-06-01T18:55:21Z" finished-at="2019-06-01T18:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="checkContentType" duration-ms="3" started-at="2019-06-01T18:55:21Z" finished-at="2019-06-01T18:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="checkResponseBody" duration-ms="6" started-at="2019-06-01T18:55:21Z" finished-at="2019-06-01T18:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="checkServerType" duration-ms="13" started-at="2019-06-01T18:55:21Z" finished-at="2019-06-01T18:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="checkStatusCode" duration-ms="0" started-at="2019-06-01T18:55:21Z" finished-at="2019-06-01T18:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="checkStatusLine" duration-ms="4" started-at="2019-06-01T18:55:21Z" finished-at="2019-06-01T18:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@3abbfa04]" name="tearDown" is-config="true" duration-ms="6" started-at="2019-06-01T18:55:21Z" finished-at="2019-06-01T18:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC005_Delete_Employee_Record -->
      <class name="com.employeeapi.testCases.TC004_Put_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="setUp" is-config="true" duration-ms="9" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="updateEmployee()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="updateEmployee" is-config="true" duration-ms="3300" started-at="2019-06-01T18:55:11Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployee -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="checkContentEncoding" duration-ms="3" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="checkContentType" duration-ms="6" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="checkResponseBody" duration-ms="6" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="checkServerType" duration-ms="10" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="checkStatusCode" duration-ms="4" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="checkStatusLine" duration-ms="0" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@239963d8]" name="tearDown" is-config="true" duration-ms="1" started-at="2019-06-01T18:55:15Z" finished-at="2019-06-01T18:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC004_Put_Employee_Record -->
      <class name="com.employeeapi.testCases.TC002_Get_Single_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="setUp" is-config="true" duration-ms="8" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getEmployee()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="getEmployee" is-config="true" duration-ms="3427" started-at="2019-06-01T18:55:04Z" finished-at="2019-06-01T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployee -->
        <test-method status="FAIL" signature="checkContentLength()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="checkContentLength" duration-ms="0" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
at java.lang.Integer.parseInt(Integer.java:542)
at java.lang.Integer.parseInt(Integer.java:615)
at com.employeeapi.testCases.TC002_Get_Single_Employee_Record.checkContentLength(TC002_Get_Single_Employee_Record.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="checkContentType" duration-ms="10" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="checkResponseBody" duration-ms="7" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.employeeapi.testCases.TC002_Get_Single_Employee_Record.checkResponseBody(TC002_Get_Single_Employee_Record.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="checkResponseTime" duration-ms="6" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="checkServerType" duration-ms="0" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="checkStatusCode" duration-ms="10" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.employeeapi.testCases.TC002_Get_Single_Employee_Record.checkStatusCode(TC002_Get_Single_Employee_Record.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="checkStatusLine" duration-ms="0" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 404 Not Found]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 404 Not Found]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.employeeapi.testCases.TC002_Get_Single_Employee_Record.checkStatusLine(TC002_Get_Single_Employee_Record.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@f6c48ac]" name="tearDown" is-config="true" duration-ms="4" started-at="2019-06-01T18:55:08Z" finished-at="2019-06-01T18:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testCases.TC002_Get_Single_Employee_Record -->
    </test> <!-- POM Model Test Cases -->
  </suite> <!-- EmployeesRestAPISuite -->
</testng-results>
